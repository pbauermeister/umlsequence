#!/usr/bin/env python

###############################################################################

import uml_sequence
import argparse
import os
import sys

if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description=("UML sequence command-line utility. "
                      "(C) Copyright 2012 by Pascal Bauermeister. "
                      "Converts a textual UML sequence description into "
                      "a PNG bitmap. "
                      "See http://ten.homelinux.net/productivity/doc/"
                      "UmlSequence for syntax description and examples."))

    parser.add_argument('--version', '-v',
                        action='version',
                        version="%%(prog)s %s" % uml_sequence.VERSION)

    parser.add_argument('INPUT_FILE',
                        action="store",
                        default=None, nargs="?",
                        help="UML sequence input file; "
                        "if omitted, stdin is used")

    parser.add_argument('--output-file', '-o',
                        required=False,
                        help="output file name; pass '-' to force to stdout; "
                        "if omitted, use INPUT_FILE base name or stdout")

    parser.add_argument('--percent-zoom', '-p',
                        required=False,
                        default=100,
                        help="magnification percentage; default is 100")

    parser.add_argument('--background-color', '-b',
                        required=False,
                        default="white",
                        help="background color name (including 'transparent');"
                        " see http://www.imagemagick.org/script/color.php"
                        "#color_names for a list of valid names; "
                        "default is white")

    parser.add_argument('--debug',
                        action="store_true",
                        default=False,
                        help="emits debug messages")

    parser.add_argument('--format', '-f',
                        required=False,
                        default="ps",
                        help="output format: any supported by ImageMagick; default is ps")

    args = parser.parse_args()

    # treat input
    if args.INPUT_FILE is None:
        inp = sys.stdin
    else:
        inp = file(args.INPUT_FILE)

    # treat output
    if args.output_file is None:
        if args.INPUT_FILE is not None:
            name = os.path.splitext(args.INPUT_FILE)[0] \
                + "." + args.format
        else:
            name = "-"
    else:
        name = args.output_file

    if name == "-":
        out = sys.stdout
    else:
        out = file(name, "wb")

    ret = uml_sequence.run(inp, out,
                           args.percent_zoom,
                           args.debug,
                           args.format,
                           args.background_color)

    sys.exit(ret)
